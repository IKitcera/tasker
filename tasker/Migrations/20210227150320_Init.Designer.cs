// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tasker.Data;

namespace tasker.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210227150320_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("tasker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("tasker.Models.User", b =>
                {
                    b.OwnsOne("tasker.Models.TaskModel.TaskManager", "taskManager", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.HasKey("UserId");

                            b1.ToTable("TaskManager");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsMany("tasker.Models.TaskModel.Category", "categories", b2 =>
                                {
                                    b2.Property<int>("TaskManagerUserId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .UseIdentityColumn();

                                    b2.Property<string>("Color")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("TaskManagerUserId", "Id");

                                    b2.ToTable("Category");

                                    b2.WithOwner()
                                        .HasForeignKey("TaskManagerUserId");

                                    b2.OwnsMany("tasker.Models.TaskModel.Task", "Tasks", b3 =>
                                        {
                                            b3.Property<int>("CategoryTaskManagerUserId")
                                                .HasColumnType("int");

                                            b3.Property<int>("CategoryId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .UseIdentityColumn();

                                            b3.Property<bool>("isDone")
                                                .HasColumnType("bit");

                                            b3.Property<string>("taskName")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("CategoryTaskManagerUserId", "CategoryId", "Id");

                                            b3.ToTable("Task");

                                            b3.WithOwner()
                                                .HasForeignKey("CategoryTaskManagerUserId", "CategoryId");
                                        });

                                    b2.Navigation("Tasks");
                                });

                            b1.OwnsOne("tasker.Models.TaskModel.StopWatcher", "stopWatcher", b2 =>
                                {
                                    b2.Property<int>("TaskManagerUserId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<long>("totalMinutes")
                                        .HasColumnType("bigint");

                                    b2.HasKey("TaskManagerUserId");

                                    b2.ToTable("TaskManager");

                                    b2.WithOwner()
                                        .HasForeignKey("TaskManagerUserId");
                                });

                            b1.Navigation("categories");

                            b1.Navigation("stopWatcher");
                        });

                    b.Navigation("taskManager");
                });
#pragma warning restore 612, 618
        }
    }
}
